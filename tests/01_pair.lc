-------------------------------------------------------------------------------
-- DO NOT MODIFY THIS SEGMENT
-------------------------------------------------------------------------------

let TRUE  = \x y -> x
let FALSE = \x y -> y
let ITE   = \b x y -> b x y
let NOT   = \b x y -> b y x
let AND   = \b1 b2 -> ITE b1 b2 FALSE
let OR    = \b1 b2 -> ITE b1 TRUE b2

let PAIR  = \x y b -> b x y
let FST   = \p     -> p TRUE
let SND   = \p     -> p FALSE

let TRIPLE = \x y z s -> s x y z
let FST3   = \t -> t (\x y z -> x)
let SND3   = \t -> t (\x y z -> y)
let TRD3   = \t -> t (\x y z -> z)

-------------------------------------------------------------------------------
-- YOU SHOULD ONLY MODIFY THE TEXT BELOW, JUST THE PARTS MARKED AS COMMENTS
-------------------------------------------------------------------------------
eval or_ff_tt :
      OR FALSE TRUE
  =d> (\b1 b2 -> ITE b1 TRUE b2) FALSE TRUE
  =b> (\b2 -> ITE FALSE TRUE b2) TRUE
  =b> ITE FALSE TRUE TRUE
  =d> (\b x y -> b x y) FALSE TRUE TRUE
  =b> (\x y -> FALSE x y) TRUE TRUE
  =b> (\y -> FALSE TRUE y) TRUE
  =b> FALSE TRUE TRUE
  =d> (\x y -> y) TRUE TRUE
  =b> (\y -> y) TRUE
  =b> TRUE
  =d> TRUE

eval snd_snd_pairs :
      SND (SND (PAIR apple (PAIR banana grape)))
  =d> SND (SND ((\x y b -> b x y) apple ((\x y b -> b x y) banana grape)))
  =b> SND (SND ((\x y b -> b x y) apple ((\y b -> b banana y) grape)))
  =b> SND (SND ((\x y b -> b x y) apple (\b -> b banana grape)))
  =b> SND (SND ((\y b -> b apple y) (\b -> b banana grape)))
  =b> SND (SND (\b -> b apple (\b -> b banana grape)))
  =d> SND ((\p -> p FALSE) (\b -> b apple (\b -> b banana grape)))
  =b> SND ((\b -> b apple (\b -> b banana grape)) FALSE)
  =b> SND (FALSE apple (\b -> b banana grape))
  =d> (\p -> p FALSE) (FALSE apple (\b -> b banana grape))
  =b> (FALSE apple (\b -> b banana grape)) FALSE
  =d> ((\x y -> y) apple (\b -> b banana grape)) FALSE
  =b> ((\y -> y) (\b -> b banana grape)) FALSE
  =b> (\b -> b banana grape) FALSE
  =b> FALSE banana grape
  =d> (\x y -> y) banana grape
  =b> (\y -> y) grape
  =b> grape
  =d> grape

eval third_triple :
      TRD3 (TRIPLE apple banana grape)
  =d> (\t -> t (\x y z -> z)) (TRIPLE apple banana grape)
  =b> TRIPLE apple banana grape (\x y z -> z)
  =d> (\x y z s -> s x y z) apple banana grape (\x y z -> z)
  =b> (\y z s -> s apple y z) banana grape (\x y z -> z)
  =b> (\z s -> s apple banana z) grape (\x y z -> z)
  =b> (\s -> s apple banana grape) (\x y z -> z)
  =b> (\x y z -> z) apple banana grape
  =b> (\y z -> z) banana grape
  =b> (\z -> z) grape
  =b> grape
  =d> grape
